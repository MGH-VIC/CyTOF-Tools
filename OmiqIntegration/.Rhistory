mod_omiq_names = omiq_names[-c(grep("clust",omiq_names))]
#Get new names for our data frame
new_names = c("Cluster","Term","Count")
#Add these new names to the dataframe
for (k in new_names) df[[k]] <- as.character()
#Create columns for the new dataframe excluding the omiq cluster columns (contain "clust")
for (k in mod_omiq_names) df[[k]] <- as.character()
#Create a counter
idx = 1
c = 1
f = csvs[[1]]
#Get the term or file being used
term = strsplit(f, "/")[[1]][length(term[[1]])]
#Get the values of the data which match the cluster number
clust_f = omiq_dat[[f]][which(omiq_dat[[f]][concat_by]==c),]
#Get number of cells in this cluster for this file
n = nrow(clust_f)
#Get the mean values of the modified omiq columns
means = colMeans(clust_f[sapply(clust_f,is.numeric)])
#Get only the modified omiq names (markers of interest)
means = means[c(mod_omiq_names)]
#Update the dataframe with the filename and the count number
df[idx,mod_omiq_names] = means
View(df)
clust = 1
#Get the term or file being used
term = strsplit(f, "/")[[1]][length(term[[1]])]
#Get the values of the data which match the cluster number
clust_f = omiq_dat[[f]][which(omiq_dat[[f]][concat_by]==clust),]
#Get number of cells in this cluster for this file
n = nrow(clust_f)
#Get the mean values of the modified omiq columns
means = colMeans(clust_f[sapply(clust_f,is.numeric)])
#Get only the modified omiq names (markers of interest)
means = means[c(mod_omiq_names)]
#Update the dataframe with the mean values
df[idx,mod_omiq_names] = means
#Update the dataframe with the new cluster number, term and count
df[idx,new_names] = c(clust,term,n)
View(df)
term
#Get the term or file being used
term = strsplit(f, "/")[[1]][length(term[[1]])]
strsplit(f, "/")[[1]]
strsplit(f, "/")[[1]][length(term[[1]])]
term = term[length(term[[1]])]
#Get the term or file being used
term = strsplit(f, "/")[[1]]
term = term[length(term[[1]])]
#Get the term or file being used
term = strsplit(f, "/")[[1]]
term
term = term[length(term)]
clust = 1
f = csvs[[1]]
#Get the term or file being used
term = strsplit(f, "/")[[1]]
term = term[length(term)]
#Get the values of the data which match the cluster number
clust_f = omiq_dat[[f]][which(omiq_dat[[f]][concat_by]==clust),]
#Get number of cells in this cluster for this file
n = nrow(clust_f)
#Get the mean values of the modified omiq columns
means = colMeans(clust_f[sapply(clust_f,is.numeric)])
#Get only the modified omiq names (markers of interest)
means = means[c(mod_omiq_names)]
#Update the dataframe with the mean values
df[idx,mod_omiq_names] = means
#Update the dataframe with the new cluster number, term and count
df[idx,new_names] = c(clust,term,n)
View(df)
#Get the list of csv files in the directory
csvs = list.files(path = csv_dir, pattern = "*.csv", full.names = TRUE)
#Read the data into a list
omiq_dat = list()
#Keep a list of the min-max values of cluster assignment
min_clust = 1
max_clust = 1
#Iterate through the files
for (f in csvs){
#Read the data
omiq_dat[[f]] = read.csv(f,check.names = FALSE)
#Check the min max values of cluster assignment
if (max(omiq_dat[[f]][concat_by]) > max_clust){
#Add the new cluster max to the max
max_clust = max(omiq_dat[[f]][concat_by])
}
#Check min values
if (min(omiq_dat[[f]][concat_by]) < min_clust){
#Add the new cluster min to the min
min_clust = min(omiq_dat[[f]][concat_by])
}
}
#Create a dataframe with the same columns as the omiq data in the VorteX format
df <- data.frame()
#Get names in the omiq data set that are clusters
omiq_names <- c(colnames(omiq_dat[[1]]))
#Exclude the omiq cluster columns (contain "clust")
mod_omiq_names = omiq_names[-c(grep("clust",omiq_names))]
#Get new names for our data frame
new_names = c("Cluster","Term","Count")
#Add these new names to the dataframe
for (k in new_names) df[[k]] <- as.character()
#Create columns for the new dataframe excluding the omiq cluster columns (contain "clust")
for (k in mod_omiq_names) df[[k]] <- as.character()
#Create a counter
idx = 1
#Iterate through each file in the list
for (clust in min_clust:max_clust){
#Iterate through each of the clusters and concatenate the data
for (f in omiq_dat){
#Get the term or file being used
term = strsplit(f, "/")[[1]]
term = term[length(term)]
#Get the values of the data which match the cluster number
clust_f = omiq_dat[[f]][which(omiq_dat[[f]][concat_by]==clust),]
#Get number of cells in this cluster for this file
n = nrow(clust_f)
#Get the mean values of the modified omiq columns
means = colMeans(clust_f[sapply(clust_f,is.numeric)])
#Get only the modified omiq names (markers of interest)
means = means[c(mod_omiq_names)]
#Update the dataframe with the mean values
df[idx,mod_omiq_names] = means
#Update the dataframe with the new cluster number, term and count
df[idx,new_names] = c(clust,term,n)
#Update the index counter
idx = idx + 1
}
}
View(omiq_dat)
f = omiq_dat[1]
length(omiq_dat)
#Get the filename
term = omiq_dat[[f]]
test = omiq_dat[1]
test = omiq_dat[[1]]
test = omiq_dat[f]
test = omiq_dat[1]
View(test)
test = names(omiq_dat[1])
names(omiq_dat)
#Get the list of csv files in the directory
csvs = list.files(path = csv_dir, pattern = "*.csv", full.names = TRUE)
#Read the data into a list
omiq_dat = list()
#Keep a list of the min-max values of cluster assignment
min_clust = 1
max_clust = 1
#Iterate through the files
for (f in csvs){
#Read the data
omiq_dat[[f]] = read.csv(f,check.names = FALSE)
#Check the min max values of cluster assignment
if (max(omiq_dat[[f]][concat_by]) > max_clust){
#Add the new cluster max to the max
max_clust = max(omiq_dat[[f]][concat_by])
}
#Check min values
if (min(omiq_dat[[f]][concat_by]) < min_clust){
#Add the new cluster min to the min
min_clust = min(omiq_dat[[f]][concat_by])
}
}
#Create a dataframe with the same columns as the omiq data in the VorteX format
df <- data.frame()
#Get names in the omiq data set that are clusters
omiq_names <- c(colnames(omiq_dat[[1]]))
#Exclude the omiq cluster columns (contain "clust")
mod_omiq_names = omiq_names[-c(grep("clust",omiq_names))]
#Get new names for our data frame
new_names = c("Cluster","Term","Count")
#Add these new names to the dataframe
for (k in new_names) df[[k]] <- as.character()
#Create columns for the new dataframe excluding the omiq cluster columns (contain "clust")
for (k in mod_omiq_names) df[[k]] <- as.character()
#Create a counter
idx = 1
#Iterate through each file in the list
for (clust in min_clust:max_clust){
#Iterate through each of the clusters and concatenate the data
for (f in names(omiq_dat)){
#Get the term or file being used
term = strsplit(omiq_dat[[f]], "/")[[1]]
term = term[length(term)]
#Get the values of the data which match the cluster number
clust_f = omiq_dat[[f]][which(omiq_dat[[f]][concat_by]==clust),]
#Get number of cells in this cluster for this file
n = nrow(clust_f)
#Get the mean values of the modified omiq columns
means = colMeans(clust_f[sapply(clust_f,is.numeric)])
#Get only the modified omiq names (markers of interest)
means = means[c(mod_omiq_names)]
#Update the dataframe with the mean values
df[idx,mod_omiq_names] = means
#Update the dataframe with the new cluster number, term and count
df[idx,new_names] = c(clust,term,n)
#Update the index counter
idx = idx + 1
}
}
f = names(omiq_names)[1]
f = names(omiq_names)[[1]]
f = names(omiq_dat)
f = names(omiq_dat)[1]
for (f in names(omiq_dat)){
print(f)
}
for (f in names(omiq_dat)){
print(f[1])
}
omiq_dat[[f]]
#Get the term or file being used
term = strsplit(omiq_dat[[f]], "/")[[1]]
strsplit(omiq_dat[[f]], "/")
#Create a dataframe with the same columns as the omiq data in the VorteX format
df <- data.frame()
#Get names in the omiq data set that are clusters
omiq_names <- c(colnames(omiq_dat[[1]]))
#Exclude the omiq cluster columns (contain "clust")
mod_omiq_names = omiq_names[-c(grep("clust",omiq_names))]
#Get new names for our data frame
new_names = c("Cluster","Term","Count")
#Add these new names to the dataframe
for (k in new_names) df[[k]] <- as.character()
#Create columns for the new dataframe excluding the omiq cluster columns (contain "clust")
for (k in mod_omiq_names) df[[k]] <- as.character()
#Create a counter
idx = 1
#Iterate through each file in the list
for (clust in min_clust:max_clust){
#Iterate through each of the clusters and concatenate the data
for (f in names(omiq_dat)){
#Get the term or file being used
term = strsplit(f, "/")[[1]]
term = term[length(term)]
#Get the values of the data which match the cluster number
clust_f = omiq_dat[[f]][which(omiq_dat[[f]][concat_by]==clust),]
#Get number of cells in this cluster for this file
n = nrow(clust_f)
#Get the mean values of the modified omiq columns
means = colMeans(clust_f[sapply(clust_f,is.numeric)])
#Get only the modified omiq names (markers of interest)
means = means[c(mod_omiq_names)]
#Update the dataframe with the mean values
df[idx,mod_omiq_names] = means
#Update the dataframe with the new cluster number, term and count
df[idx,new_names] = c(clust,term,n)
#Update the index counter
idx = idx + 1
}
}
View(df)
#Replace NA values with 0 to match VorteX output
df[is.na(df)] = 0
View(df)
#Replace NA values with 0 to match VorteX output
df[is.na(df)] = 0
View(df)
#Replace NA values with 0 to match VorteX output
df[is.nan(df)] = 0
df
#Replace NA values with 0 to match VorteX output
df[is.nan(df)] = 0
#Replace NA values with 0 to match VorteX output
df[is.na(df)] = 0
View(df)
#Create a dataframe with the same columns as the omiq data in the VorteX format
df <- data.frame()
#Get names in the omiq data set that are clusters
omiq_names <- c(colnames(omiq_dat[[1]]))
#Exclude the omiq cluster columns (contain "clust")
mod_omiq_names = omiq_names[-c(grep("clust",omiq_names))]
#Get new names for our data frame
new_names = c("Cluster","Term","Count")
#Add these new names to the dataframe
for (k in new_names) df[[k]] <- as.character()
#Create columns for the new dataframe excluding the omiq cluster columns (contain "clust")
for (k in mod_omiq_names) df[[k]] <- as.character()
#Create a counter
idx = 1
#Iterate through each file in the list
for (clust in min_clust:max_clust){
#Iterate through each of the clusters and concatenate the data
for (f in names(omiq_dat)){
#Get the term or file being used
term = strsplit(f, "/")[[1]]
term = term[length(term)]
#Get the values of the data which match the cluster number
clust_f = omiq_dat[[f]][which(omiq_dat[[f]][concat_by]==clust),]
#Get number of cells in this cluster for this file
n = nrow(clust_f)
#Get the mean values of the modified omiq columns
means = colMeans(clust_f[sapply(clust_f,is.numeric)])
#Get only the modified omiq names (markers of interest)
means = means[c(mod_omiq_names)]
#Update the dataframe with the mean values
df[idx,mod_omiq_names] = means
#Update the dataframe with the new cluster number, term and count
df[idx,new_names] = c(clust,term,n)
#Update the index counter
idx = idx + 1
}
}
View(df)
df[644]
df[644,3]
df[644,4]
#Create a counter
idx = 1
#Iterate through each file in the list
for (clust in min_clust:max_clust){
#Iterate through each of the clusters and concatenate the data
for (f in names(omiq_dat)){
#Get the term or file being used
term = strsplit(f, "/")[[1]]
term = term[length(term)]
#Get the values of the data which match the cluster number
clust_f = omiq_dat[[f]][which(omiq_dat[[f]][concat_by]==clust),]
#Get number of cells in this cluster for this file
n = nrow(clust_f)
#Get the mean values of the modified omiq columns
means = colMeans(clust_f[sapply(clust_f,is.numeric)])
#Get only the modified omiq names (markers of interest)
means = means[c(mod_omiq_names)]
#Update the dataframe with the mean values
df[idx,mod_omiq_names] = as.numeric(means)
#Update the dataframe with the new cluster number, term and count
df[idx,new_names] = c(clust,term,n)
#Update the index counter
idx = idx + 1
}
}
View(df)
#Create a dataframe with the same columns as the omiq data in the VorteX format
df <- data.frame()
#Get names in the omiq data set that are clusters
omiq_names <- c(colnames(omiq_dat[[1]]))
#Exclude the omiq cluster columns (contain "clust")
mod_omiq_names = omiq_names[-c(grep("clust",omiq_names))]
#Get new names for our data frame
new_names = c("Cluster","Term","Count")
#Add these new names to the dataframe
for (k in new_names) df[[k]] <- as.character()
#Create columns for the new dataframe excluding the omiq cluster columns (contain "clust")
for (k in mod_omiq_names) df[[k]] <- as.character()
#Create a counter
idx = 1
#Iterate through each file in the list
for (clust in min_clust:max_clust){
#Iterate through each of the clusters and concatenate the data
for (f in names(omiq_dat)){
#Get the term or file being used
term = strsplit(f, "/")[[1]]
term = term[length(term)]
#Get the values of the data which match the cluster number
clust_f = omiq_dat[[f]][which(omiq_dat[[f]][concat_by]==clust),]
#Get number of cells in this cluster for this file
n = nrow(clust_f)
#Get the mean values of the modified omiq columns
means = colMeans(clust_f[sapply(clust_f,is.numeric)])
#Get only the modified omiq names (markers of interest)
means = means[c(mod_omiq_names)]
#Update the dataframe with the mean values
df[idx,mod_omiq_names] = as.numeric(means)
#Update the dataframe with the new cluster number, term and count
df[idx,new_names] = c(clust,term,n)
#Update the index counter
idx = idx + 1
}
}
View(df)
df[644,4]
#Create a dataframe with the same columns as the omiq data in the VorteX format
df <- data.frame()
#Get names in the omiq data set that are clusters
omiq_names <- c(colnames(omiq_dat[[1]]))
#Exclude the omiq cluster columns (contain "clust")
mod_omiq_names = omiq_names[-c(grep("clust",omiq_names))]
#Get new names for our data frame
new_names = c("Cluster","Term","Count")
#Add these new names to the dataframe
for (k in new_names) df[[k]] <- as.character()
#Create columns for the new dataframe excluding the omiq cluster columns (contain "clust")
for (k in mod_omiq_names) df[[k]] <- as.character()
#Create a counter
idx = 1
#Iterate through each file in the list
for (clust in min_clust:max_clust){
#Iterate through each of the clusters and concatenate the data
for (f in names(omiq_dat)){
#Get the term or file being used
term = strsplit(f, "/")[[1]]
term = term[length(term)]
#Get the values of the data which match the cluster number
clust_f = omiq_dat[[f]][which(omiq_dat[[f]][concat_by]==clust),]
#Get number of cells in this cluster for this file
n = nrow(clust_f)
#Get the mean values of the modified omiq columns
means = colMeans(clust_f[sapply(clust_f,is.numeric)])
#Get only the modified omiq names (markers of interest)
means = means[c(mod_omiq_names)]
#Update the dataframe with the mean values
df[idx,mod_omiq_names] = as.numeric(as.character(means))
#Update the dataframe with the new cluster number, term and count
df[idx,new_names] = c(clust,term,n)
#Update the index counter
idx = idx + 1
}
}
df[644,4]
View(df)
class(df[,4])
df[mod_omiq_names]<- lapply(df[mod_omiq_names], as.numeric)
View(df)
class(df[,4])
#Replace NA values with 0 to match VorteX output
df[is.na(df)] = 0
View(df)
#Module for converting OmiqAI exported data to VIC CyTOF Tools format
#Joshua Hess
#Check for missing packages and install if needed
list.of.packages <- c("openxlsx")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Import packages
require('openxlsx')
list.of.packages <- c("openxlsx")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Import packages
require('openxlsx')
csv_dir = "Z:/Raju Paul/Q vax Human/Normalization/CytoNorm/Omiq Analysis/06042020/CSV FlowSOM Export/G1,G5 154,IFNg CSV"
concat_by = ="fsom-metaclust-k=20"
concat_by ="fsom-metaclust-k=20"
#Get the list of csv files in the directory
csvs = list.files(path = csv_dir, pattern = "*.csv", full.names = TRUE)
#Read the data into a list
omiq_dat = list()
#Keep a list of the min-max values of cluster assignment
min_clust = 1
max_clust = 1
#Iterate through the files
for (f in csvs){
#Read the data
omiq_dat[[f]] = read.csv(f,check.names = FALSE)
#Check the min max values of cluster assignment
if (max(omiq_dat[[f]][concat_by]) > max_clust){
#Add the new cluster max to the max
max_clust = max(omiq_dat[[f]][concat_by])
}
#Check min values
if (min(omiq_dat[[f]][concat_by]) < min_clust){
#Add the new cluster min to the min
min_clust = min(omiq_dat[[f]][concat_by])
}
}
#Create a dataframe with the same columns as the omiq data in the VorteX format
df <- data.frame()
#Get names in the omiq data set that are clusters
omiq_names <- c(colnames(omiq_dat[[1]]))
#Exclude the omiq cluster columns (contain "clust")
mod_omiq_names = omiq_names[-c(grep("clust",omiq_names))]
#Get new names for our data frame
new_names = c("Cluster","Term","Count")
#Add these new names to the dataframe
for (k in new_names) df[[k]] <- as.character()
#Create columns for the new dataframe excluding the omiq cluster columns (contain "clust")
for (k in mod_omiq_names) df[[k]] <- as.character()
#Create a counter
idx = 1
#Iterate through each file in the list
for (clust in min_clust:max_clust){
#Iterate through each of the clusters and concatenate the data
for (f in names(omiq_dat)){
#Get the term or file being used
term = strsplit(f, "/")[[1]]
term = term[length(term)]
#Get the values of the data which match the cluster number
clust_f = omiq_dat[[f]][which(omiq_dat[[f]][concat_by]==clust),]
#Get number of cells in this cluster for this file
n = nrow(clust_f)
#Get the mean values of the modified omiq columns
means = colMeans(clust_f[sapply(clust_f,is.numeric)])
#Get only the modified omiq names (markers of interest)
means = means[c(mod_omiq_names)]
#Update the dataframe with the mean values
df[idx,mod_omiq_names] = means
#Update the dataframe with the new cluster number, term and count
df[idx,new_names] = c(clust,term,n)
#Update the index counter
idx = idx + 1
}
}
#Convert the character columns to numeric
df[mod_omiq_names]<- lapply(df[mod_omiq_names], as.numeric)
#Replace NA values with 0 to match VorteX output
df[is.na(df)] = 0
View(df)
#Input resulting excel file name and path
out_name = "Z:/Raju Paul/Q vax Human/Normalization/CytoNorm/Omiq Analysis/06042020/CSV FlowSOM Export/Grp1Grp5flowSOM.xlsx"
#Module for converting data from Omiq to SpadeVizR format
#Load custom module
source("ConvertData.R")
#Input directory to your csv files
csv_dir = "Z:/Raju Paul/Q vax Human/Normalization/CytoNorm/Omiq Analysis/06042020/CSV FlowSOM Export/G1,G5 154,IFNg CSV"
#Input how you want to concatenate files (by cluster -- header in csvs)
concat_by ="fsom-metaclust-k=20"
#Input resulting excel file name and path
out_name = "Z:/Raju Paul/Q vax Human/Normalization/CytoNorm/Omiq Analysis/06042020/CSV FlowSOM Export/Grp1Grp5flowSOM.xlsx"
#Convert the data from Omiq clustering
ConvertOmiqClusterCSVs(csv_dir,concat_by,out_name)
