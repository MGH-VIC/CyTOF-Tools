#SpadevizR analysis
#Joshua Hess
#Check for missing packages and install if needed
list.of.packages <- c("devtools","Rcpp","biclust","diptest","evtree","ggdendro","ggfortify","ggplot2","gplots","gdata","ggrepel",
"ggRandomForests","gridExtra","gtable","gtools","igraph","MASS","packcircles","plyr","randomForestSRC",
"reshape2","pheatmap","readxl","raster","openxlsx","bindrcpp","stringi","statmod","tidyr","plotflow",
"stringr","tidyverse")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Check for github packages
require('devtools')
list_git = c("tchitchek-lab/SPADEVizR","trinker/plotflow")
new.packages <- list_git[!(list_git %in% installed.packages()[,"Package"])]
if(length(new.packages)) install_github(new.packages,force=TRUE)
#Check for Biomanager packages
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
#BiocManager::install(version = "3.10")
list_bio = c("FlowSOM","flowCore","edgeR")
new.packages <- list_bio[!(list_bio %in% installed.packages()[,"Package"])]
if(length(new.packages)){
for (pack in new.packages){
BiocManager::install(pack, suppressUpdates = TRUE)
}
}
require(dplyr)
require(openxlsx)
require(tidyverse)
require('Rcpp')
require('biclust')
require('data.table')
require('diptest')
require('evtree')
require('ggdendro')
require("ggfortify")
require('ggplot2')
require('gplots')
require('gdata')
require('ggrepel')
require('ggRandomForests')
require('gridExtra')
require('gtable')
require('gtools')
require('igraph')
require('MASS')
require('packcircles')
require('plyr')
require("randomForestSRC")
require('reshape2')
require('pheatmap')
require('readxl')
require("raster")
require('openxlsx')
require("FlowSOM")
require('Rcpp')
require("SPADEVizR")
require(statmod)
require("edgeR")
require(RColorBrewer)
require("tidyr")
require(plotflow)
require(stringr)
require(tidyverse)
#Import custom modules
source("utils.R") #Sources utils function for phenoviewer_modified
excel = "Flugen Pilot 25K Cells K50 Group Stats 20200212.xlsx"
scatterplot_import=TRUE
save_new=FALSE
save_as=NULL
pheno_cols=c(1:10,12:49)
experiment_name = "Pilot"
remove_marker_string = c("_",":")
remove=c("export_191218_1_00_cells_found_1_CD45+ CD66b- Leukocytes",
"export_191218_6_00_cells_found_1_CD45+ CD66b- Leukocytes",
"export_191218_11_00_cells_found_1_CD45+ CD66b- Leukocytes",
"export_191218_16_00_cells_found_1_CD45+ CD66b- Leukocytes",
"export_191220_21_00_cells_found_1_CD45+ CD66b- Leukocytes",
"export_191218_31_00_cells_found_1_CD45+ CD66b- Leukocytes",
"export_191220_26_00_cells_found_1_CD45+ CD66b- Leukocytes",
"export_191220_32_00_cells_found_1_CD45+ CD66b- Leukocytes",
"export_191220_33_00_cells_found_1_CD45+ CD66b- Leukocytes",
"export_191220_34_00_cells_found_1_CD45+ CD66b- Leukocytes")
#Read the data
data = openxlsx::read.xlsx(excel)
View(data)
#Check for samples to remove
if (!is.null(remove)){
#Remove the indicated samples from the dataframe
data = data[-which(data$Term %in% remove),]
}
View(data)
